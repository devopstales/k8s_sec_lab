- name: Deploy the config-file for kubeadm and kubelet
  become: true
  template:
    src: "kubeadm-kubelet-config.yaml.j2"
    dest: "/etc/kubernetes/kubeadm-kubelet-config.yaml"

- name: Initialize Kubernetes master with kubeadm init
  become: true
  command: >
    kubeadm init
    --config /etc/kubernetes/kubeadm-kubelet-config.yaml
    {{ kubernetes_kubeadm_init_extra_opts }}
  register: kubeadmin_init
  when: (not kubernetes_init_stat.stat.exists) and (kubernetes_ignore_preflight_errors is not defined)

- name: Initialize Kubernetes master with kubeadm init and ignore_preflight_errors
  become: true
  command: >
    kubeadm init
    --config /etc/kubernetes/kubeadm-kubelet-config.yaml
    --ignore-preflight-errors={{ kubernetes_ignore_preflight_errors }}
    {{ kubernetes_kubeadm_init_extra_opts }}
  register: kubeadmin_init
  when: (not kubernetes_init_stat.stat.exists) and (kubernetes_ignore_preflight_errors is defined)

- name: Print the init output to screen.
  become: true
  debug:
    var: kubeadmin_init.stdout
    verbosity: 2
  when: not kubernetes_init_stat.stat.exists

- name: Ensure .kube directory exists.
  become: true
  file:
    path: ~/.kube
    state: directory
    mode: 0755

- name: Delete ~/.kube/conf.
  become: true
  ansible.builtin.file:
    path: "~/.kube/config"
    state: "absent"

- name: Symlink the kubectl admin.conf to ~/.kube/conf.
  become: true
  file:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    state: link
    mode: 0644

- name: Approve certificate
  become: true
  shell: "kubectl get csr -oname | xargs kubectl certificate approve"
  when:
     - not kubernetes_init_stat.stat.exists

## create aprover job
- name: Setup cert-approver.yaml
  become: true
  template:
    src: "cert-approver.yaml.j2"
    dest: "/etc/kubernetes/cert-approver.yaml"
  when:
     - not kubernetes_init_stat.stat.exists

- name: Setup clusterrole.yaml
  become: true
  template:
    src: "clusterrole.yaml.j2"
    dest: "/etc/kubernetes/clusterrole.yaml"
  when:
     - not kubernetes_init_stat.stat.exists

- name: Install kubernetes python lib
  become: true
  package:
    name: python3-kubernetes
    state: present
  when: ansible_os_family == "Debian"

- name: Install all yaml files
  become: true
  k8s:
    src: "{{ item }}"
    state: present
    apply: true
  loop:
    - /etc/kubernetes/clusterrole.yaml
    - /etc/kubernetes/cert-approver.yaml
  when:
     - not kubernetes_init_stat.stat.exists

- name: Allow pods on master node (if configured).
  become: true
  command: "kubectl taint nodes --all node-role.kubernetes.io/master-"
  when:
    - kubernetes_allow_pods_on_master | bool
    - not kubernetes_init_stat.stat.exists

- name: Allow pods on master node (if configured).
  become: true
  command: "kubectl taint nodes --all node-role.kubernetes.io/control-plane-"
  when:
    - kubernetes_allow_pods_on_master | bool
    - not kubernetes_init_stat.stat.exists
