# -*- mode: ruby -*-
# vi: set ft=ruby :

IMAGE = "almalinux/8"
MEMORY = 6144
CPU = 2
IPBASE_1 = "192.168.100."
IPBASE_2 = "192.168.200."

Vagrant.configure("2") do |config|
  config.vm.box_check_update = false
  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = false
  end
  if Vagrant.has_plugin?("vagrant-timezone")
    config.timezone.value = :host
  end
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end
  if Vagrant.has_plugin?("vagrant-persistent-storage")
    config.persistent_storage.enabled = true
  end

  config.vm.provider 'virtualbox' do |vb|
   vb.customize [ "guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold", 1000 ]
   vb.customize ["modifyvm", :id, "--audio", "none"]
   vb.customize ["modifyvm", :id, "--vram", "8"]
   vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
   vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
   vb.linked_clone = true
  end

  config.vm.define "k8s" do |node|
    node.vm.box = IMAGE
    node.vm.hostname = "k8s.mydomain.intra"
    ip = "#{IPBASE_1}#{10}"
    ip2 = "#{IPBASE_2}#{10}"
    node.vm.network "private_network", ip: ip
    node.vm.network "private_network", ip: ip2
    node.vm.provider "virtualbox" do |vb|
      vb.memory = MEMORY
      vb.cpus = CPU
      vb.name = "k8s"
    end

    node.vm.provision "ansible" do |ansible|
        ansible.playbook = "ansible_roles/playbook.yml"
        ansible.verbose = false
        ansible.groups = {
            "master" => ["k8s"],
        }
        ansible.extra_vars = {
            kubeadm_config_loadbalancer_ip: "#{IPBASE_1}#{10}",
            kubernetes_node_ip: "#{IPBASE_1}#{10}",
            container_runtime: "crio",
            kubernetes_version: '1.26',
        }
    end

    # Add some disks.
    if Vagrant.has_plugin?("vagrant-persistent-storage")
      node.persistent_storage.location = "./disks/k8s-disk.vmdk"
      node.persistent_storage.size = 102400
      node.persistent_storage.use_lvm = false
      #node.persistent_storage.partition = false
      node.persistent_storage.mountpoint = '/var/lib/longhorn/'
    end
  end
end
