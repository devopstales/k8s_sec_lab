apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
bootstrapTokens:
- token: "c2t0rj.cofbfnwwrb387890"
localAPIEndpoint:
  advertiseAddress: 172.17.9.10
  bindPort: 6443
nodeRegistration:
  criSocket: unix:///run/containerd/containerd.sock
  imagePullPolicy: IfNotPresent
  taints: null
  kubeletExtraArgs:
    runtime-cgroups: "/system.slice/containerd.service"
    rotate-server-certificates: "true"
    protect-kernel-defaults: "true"
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
clusterName: cl04
kubernetesVersion: 1.22.2
certificatesDir: /etc/kubernetes/pki
# Other components of the current control plane only connect to the apiserver on the current host.
# This is the expected behavior, see: https://github.com/kubernetes/kubeadm/issues/2271
# controlPlaneEndpoint: "127.0.0.1:6443"
controlPlaneEndpoint: "172.17.9.10:6443"
etcd:
  local:
    dataDir: /var/lib/etcd
networking:
  serviceSubnet: "10.66.0.0/16"
  podSubnet: "10.88.0.1/16"
  dnsDomain: "cluster.local"
apiServer:
  certSANs:
  - "*.mydomain.intra"
  - "172.17.9.10"
  - "10.0.2.15"
  extraArgs:
    insecure-port: "0"
    profiling: "false"
    anonymous-auth: "false"
    audit-log-maxage: "30"
    audit-log-maxbackup: "10"
    audit-log-maxsize: "100"
    audit-log-path: "/var/log/kube-audit/audit.log"
    # The fraction of requests that will be closed gracefully(GOAWAY) to prevent
    # HTTP/2 clients from getting stuck on a single apiserver.
    goaway-chance: "0.001"
  extraVolumes:
  - name: "audit-log"
    hostPath: "/var/log/kube-audit"
    mountPath: "/var/log/kube-audit"
    pathType: "DirectoryOrCreate"
scheduler:
  extraArgs:
    profiling: "false"
controllerManager:
  extraArgs:
    profiling: "false"
dns: {}
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
enableServer: true
featureGates:
    RotateKubeletServerCertificate: true
    SeccompDefault: true
seccompDefault: true
protectKernelDefaults: true
readOnlyPort: 0

# https://kubernetes.io/docs/reference/config-api/k#ubeadm-config.v1beta3/
# https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/
# https://github.com/mritd/kubeadm-config-pack/blob/master/pack/conf/kubeadm.yaml