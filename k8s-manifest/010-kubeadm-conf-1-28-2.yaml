apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
bootstrapTokens:
- token: "c2t0rj.cofbfnwwrb387890"
localAPIEndpoint:
  # local ip and lort
  advertiseAddress: 192.168.56.12
  bindPort: 6443
nodeRegistration:
  criSocket: unix:///var/run/crio/crio.sock
  imagePullPolicy: IfNotPresent
  taints: null
  kubeletExtraArgs:
    rotate-server-certificates: "true"
    protect-kernel-defaults: "true"
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
clusterName: k8s-main
kubernetesVersion: 1.28.2
certificatesDir: /etc/kubernetes/pki
# loadbalancer ip and port
controlPlaneEndpoint: "192.168.56.12:6443"
etcd:
  local:
    dataDir: /var/lib/etcd
networking:
  serviceSubnet: "10.96.0.0/12"
  podSubnet: "10.244.0.0/16"
  dnsDomain: "cluster.local"
apiServer:
  extraArgs:
    authorization-mode: "Node,RBAC"
    # force PodSecurityPolicy ?
    enable-admission-plugins: "NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook"
    kubelet-certificate-authority: "/etc/kubernetes/pki/ca.crt"
    admission-control-config-file: /etc/kubernetes/k8s-pss.yaml
    profiling: "false"
    anonymous-auth: "true"
    service-node-port-range: "30000-50000"
    # mounts
    encryption-provider-config: "/etc/kubernetes/etcd-encription.yaml"
    audit-log-maxage: "30"
    audit-log-maxbackup: "10"
    audit-log-maxsize: "100"
    audit-log-path: "/var/log/kube-audit/audit.log"
    audit-policy-file: "/etc/kubernetes/audit-policy.yaml"
  extraVolumes:
  - name: "audit-config"
    hostPath: "/etc/kubernetes/audit-policy.yaml"
    mountPath: "/etc/kubernetes/audit-policy.yaml"
    readOnly: true
    pathType: "File"
  - name: "audit-log"
    hostPath: "/var/log/kube-audit"
    mountPath: "/var/log/kube-audit"
    pathType: "DirectoryOrCreate"
  - name: "etc-kubernetes-etcd-enc"
    hostPath: "/etc/kubernetes/etcd-encription.yaml"
    mountPath: "/etc/kubernetes/etcd-encription.yaml"
    readOnly: true
    pathType: "File"
  - name: "kubernetes-pss"
    hostPath: "/etc/kubernetes/k8s-pss.yaml"
    mountPath: "/etc/kubernetes/k8s-pss.yaml"
    pathType: "File"
    propagation: Bidirectional
scheduler:
  extraArgs:
    profiling: "false"
controllerManager:
  extraArgs:
    profiling: "false"
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
enableServer: true
failSwapOn: false
cgroupDriver: "cgroupfs"
serverTLSBootstrap: true
rotateCertificates: true
featureGates:
    KubeletInUserNamespace: true
    RotateKubeletServerCertificate: true
    SeccompDefault: true
    NodeSwap: true
seccompDefault: true
protectKernelDefaults: true
readOnlyPort: 0
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: JoinConfiguration
nodeRegistration:
  criSocket: unix:///var/run/crio/crio.sock
  imagePullPolicy: IfNotPresent
  taints: null
  kubeletExtraArgs:
    rotate-server-certificates: "true"
    protect-kernel-defaults: "true"
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
mode: "iptables"
# or "userspace"
conntrack:
# Skip setting sysctl value "net.netfilter.nf_conntrack_max"
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

